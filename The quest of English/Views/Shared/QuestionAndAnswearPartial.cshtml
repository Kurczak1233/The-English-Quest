@model IEnumerable<SampleTestQAViewModel>
@{int counter = 0;}
@{int QuestionNumber = 1;}
@{int id = 0; }
@foreach (var item in Model)
{

    id = item.Id;
    <section id="questionAndAnswears">
        <div class="row mt-3">
            <div class="question-circle text-center ml-4">
                <strong class="font-size-medium question">@QuestionNumber</strong>
            </div>
            <div class="col-10 ml-2 d-flex align-items-center font-size-rather-small">
                <p>@item.Question&nbsp;<span class="font-weight-bold font-italic dark-blue-text-color">@item.QuestionDecorationPart</span>&nbsp;@item.Question2</p>
            </div>
        </div>
        <div class="form-check" id="checkAnswears">
            <div class="mt-1 form-check offset-1 answearRadio">
                <input class="form-check-input" type="radio" name="@counter" id="@item.FirstQuestionId">
                <label class="form-check-label" for="@item.FirstQuestionId">
                    @item.FirstQuestionAnswear
                </label>
            </div>
            <div class="mt-1 form-check offset-1 answearRadio">
                <input class="form-check-input" type="radio" name="@counter" id="@item.SecondQuestionId">
                <label class="form-check-label" for="@item.SecondQuestionId">
                    @item.SecondQuestionAnswear
                </label>
            </div>
            <div class="mt-1 form-check offset-1 answearRadio">
                <input class="form-check-input" type="radio" name="@counter" id="@item.ThirdQuestionId">
                <label class="form-check-label" for="@item.ThirdQuestionId">
                    @item.ThirdQuestionAnswear
                </label>
            </div>
        </div>
    </section>
    counter++;
    QuestionNumber++;
}
<div class="text-center mt-5 mb-5">
    <button id="@id" type="submit" class="btn warm-orange-color">Check answears</button>
</div>
<script>

    @{ List<string> AnswearList = new List<string>(); //Stworzyć ViewModel z listą odpowiedzi?
        foreach (var item in Model.Take(5)) {
            AnswearList.Add(item.Answear);
        }
     }
        var ar = @Html.Raw(Json.Serialize(AnswearList));
        //console.log(ar)


    var counter = 0;
    var string = '#' + @id;
    $(string).one("click", function () {
        console.log($('#checkAnswears'));
        $('[id = "checkAnswears"]').each(function () {
            //var radioValue = $("input[type=radio]:checked").val();
            var elId = $(this).find("input[type=radio]:checked").attr('id');
            var radioLabelValue = $("label[for='" + elId + "']").text();
            var trimStr = $.trim(radioLabelValue);
            var trimStr2 = $.trim(ar[counter]);
            console.log(trimStr2);
            console.log(trimStr);
            console.log(elId);
            if (trimStr2 == trimStr) {
                $("label[for='" + elId + "']").css("background-color", "rgba(0,255,127, 0.2)");
            }
            else {
                $("label[for='" + elId + "']").css("background-color", "rgba(255, 77, 71, 0.2)");
            }
            counter++;
        })
    })

</script>